plugins {
	id 'org.asciidoctor.convert' version '1.5.3'
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.forcont.digsigproto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven {
		url "http://maven.irisa.fr/artifactory/list/kermeta-public-release"
	}
}

ext {
	set('snippetsDir', file('build/generated-snippets'))
}

dependencies {
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	runtimeOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	compile 'com.docusign:docusign-esign-java:2.9.0'
	compile 'commons-cli:commons-cli:1.3'
	compile 'org.apache.commons:commons-lang3:3.4'
	compile 'org.apache.commons:httpclient:3.1.0-v201012070820'
	compile 'org.springframework.boot:spring-boot-autoconfigure:2.1.4.RELEASE'
	compile 'org.springframework.security.oauth:spring-security-oauth2:2.3.5.RELEASE'
	compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.4.RELEASE'
	compile 'org.webjars:jquery:3.4.1'
	compile 'org.webjars.npm:mustache:2.3.0'
	compile 'org.springframework:spring-test:5.1.8.RELEASE'
	compile 'org.springframework.security:spring-security-test:4.0.0.RELEASE'
	compile 'org.apache.pdfbox:pdfbox:2.0.16'

	compile 'io.jsonwebtoken:jjwt:0.9.1'


}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	mainClassName = 'com.forcont.digsigproto.DigSigApplication'
	manifest {
		attributes 'Start-Class': 'com.forcont.digsigproto.DigSigApplication'
	}
}

jar {
	manifest {
		attributes 'Main-Class': 'com.forcont.digsigproto.DigSigApplication'
	}
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}